// Copyright 2019-present Facebook
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"

	"entgo.io/ent/dialect/sql"
)

func (c *Category) Todos(
	ctx context.Context,
	orderBy *TodoOrder,
	// where *TodoWhereInput,
	page int,
	limit int,
) ([]*Todo, error) {
	return c.QueryTodos().
		Limit(limit).Offset(page).
		Order(func(s *sql.Selector) {
			if orderBy != nil {
				c := s.C(orderBy.Field.field)
				if orderBy.Direction == OrderDirectionAsc {
					s.OrderBy(sql.Asc(c))
				} else if orderBy.Direction == OrderDirectionDesc {
					s.OrderBy(sql.Desc(c))
				}
			}
		}).
		All(ctx)
}

func (t *Todo) Parent(ctx context.Context) (*Todo, error) {
	result, err := t.Edges.ParentOrErr()
	if IsNotLoaded(err) {
		result, err = t.QueryParent().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (t *Todo) Children(
	ctx context.Context,
	orderBy *TodoOrder,
	// where *TodoWhereInput,
	after *Cursor,
	before *Cursor,
	first *int,
	last *int,
) (*TodoConnection, error) {
	return t.QueryChildren().
		Paginate(ctx, after, first, before, last,
			WithTodoOrder(orderBy),
			// WithTodoOrderFilter(where.Filter),
		)
}
